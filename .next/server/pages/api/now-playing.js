"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/now-playing";
exports.ids = ["pages/api/now-playing"];
exports.modules = {

/***/ "isomorphic-fetch":
/*!***********************************!*\
  !*** external "isomorphic-fetch" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("isomorphic-fetch");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "./lib/spotify.js":
/*!************************!*\
  !*** ./lib/spotify.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNowPlaying\": () => (/* binding */ getNowPlaying)\n/* harmony export */ });\n/* harmony import */ var isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-fetch */ \"isomorphic-fetch\");\n/* harmony import */ var isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! querystring */ \"querystring\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// We access our values with enviroment variables,\n// we don't want to share these values in our code\nconst client_id = process.env.SPOTIFY_CLIENT_ID;\nconst client_secret = process.env.SPOTIFY_CLIENT_SECRET;\nconst refresh_token = process.env.SPOTIFY_REFRESH_TOKEN;\n// We encode our client_id and client_secret again to send with the POST request.\n// This is a part of the authorization header\nconst basic = Buffer.from(`${client_id}:${client_secret}`).toString('base64');\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`;\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`;\n// This function gets the access token so that we can access the API\nconst getAccessToken = async ()=>{\n    const response = await isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()(TOKEN_ENDPOINT, {\n        method: 'POST',\n        headers: {\n            Authorization: `Basic ${basic}`,\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: querystring__WEBPACK_IMPORTED_MODULE_1___default().stringify({\n            grant_type: 'refresh_token',\n            refresh_token\n        })\n    });\n    return response.json();\n};\n// We use the afformentioned access token and send it with the request to the API\n// this requests gets the currently playing song.\nconst getNowPlaying = async ()=>{\n    const { access_token  } = await getAccessToken();\n    return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()(NOW_PLAYING_ENDPOINT, {\n        headers: {\n            Authorization: `Bearer ${access_token}`\n        }\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvc3BvdGlmeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvQztBQUNDO0FBRXJDLEVBQWtEO0FBQ2xELEVBQWtEO0FBQ2xELEtBQUssQ0FBQ0UsU0FBUyxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsaUJBQWlCO0FBQy9DLEtBQUssQ0FBQ0MsYUFBYSxHQUFHSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0cscUJBQXFCO0FBQ3ZELEtBQUssQ0FBQ0MsYUFBYSxHQUFHTCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0sscUJBQXFCO0FBRXZELEVBQWlGO0FBQ2pGLEVBQTZDO0FBQzdDLEtBQUssQ0FBQ0MsS0FBSyxHQUFHQyxNQUFNLENBQUNDLElBQUksSUFBSVYsU0FBUyxDQUFDLENBQUMsRUFBRUksYUFBYSxJQUFJTyxRQUFRLENBQUMsQ0FBUTtBQUM1RSxLQUFLLENBQUNDLG9CQUFvQixJQUFJLHNEQUFzRDtBQUNwRixLQUFLLENBQUNDLGNBQWMsSUFBSSxzQ0FBc0M7QUFFOUQsRUFBb0U7QUFDcEUsS0FBSyxDQUFDQyxjQUFjLGFBQWUsQ0FBQztJQUNsQyxLQUFLLENBQUNDLFFBQVEsR0FBRyxLQUFLLENBQUNqQix1REFBSyxDQUFDZSxjQUFjLEVBQUUsQ0FBQztRQUM1Q0csTUFBTSxFQUFFLENBQU07UUFDZEMsT0FBTyxFQUFFLENBQUM7WUFDUkMsYUFBYSxHQUFHLE1BQU0sRUFBRVYsS0FBSztZQUM3QixDQUFjLGVBQUUsQ0FBbUM7UUFDckQsQ0FBQztRQUNEVyxJQUFJLEVBQUVwQiw0REFBcUIsQ0FBQyxDQUFDO1lBQzNCc0IsVUFBVSxFQUFFLENBQWU7WUFDM0JmLGFBQWE7UUFDZixDQUFDO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQ1MsUUFBUSxDQUFDTyxJQUFJO0FBQ3RCLENBQUM7QUFFRCxFQUFpRjtBQUNqRixFQUFpRDtBQUMxQyxLQUFLLENBQUNDLGFBQWEsYUFBZSxDQUFDO0lBQ3hDLEtBQUssQ0FBQyxDQUFDLENBQUNDLFlBQVksRUFBQyxDQUFDLEdBQUcsS0FBSyxDQUFDVixjQUFjO0lBRTdDLE1BQU0sQ0FBQ2hCLHVEQUFLLENBQUNjLG9CQUFvQixFQUFFLENBQUM7UUFDbENLLE9BQU8sRUFBRSxDQUFDO1lBQ1JDLGFBQWEsR0FBRyxPQUFPLEVBQUVNLFlBQVk7UUFDdkMsQ0FBQztJQUNILENBQUM7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmQtbmV4dGpzLXN0YXJ0ZXItYmxvZy8uL2xpYi9zcG90aWZ5LmpzPzlkZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtZmV0Y2gnXG5pbXBvcnQgcXVlcnlzdHJpbmcgZnJvbSAncXVlcnlzdHJpbmcnXG5cbi8vIFdlIGFjY2VzcyBvdXIgdmFsdWVzIHdpdGggZW52aXJvbWVudCB2YXJpYWJsZXMsXG4vLyB3ZSBkb24ndCB3YW50IHRvIHNoYXJlIHRoZXNlIHZhbHVlcyBpbiBvdXIgY29kZVxuY29uc3QgY2xpZW50X2lkID0gcHJvY2Vzcy5lbnYuU1BPVElGWV9DTElFTlRfSURcbmNvbnN0IGNsaWVudF9zZWNyZXQgPSBwcm9jZXNzLmVudi5TUE9USUZZX0NMSUVOVF9TRUNSRVRcbmNvbnN0IHJlZnJlc2hfdG9rZW4gPSBwcm9jZXNzLmVudi5TUE9USUZZX1JFRlJFU0hfVE9LRU5cblxuLy8gV2UgZW5jb2RlIG91ciBjbGllbnRfaWQgYW5kIGNsaWVudF9zZWNyZXQgYWdhaW4gdG8gc2VuZCB3aXRoIHRoZSBQT1NUIHJlcXVlc3QuXG4vLyBUaGlzIGlzIGEgcGFydCBvZiB0aGUgYXV0aG9yaXphdGlvbiBoZWFkZXJcbmNvbnN0IGJhc2ljID0gQnVmZmVyLmZyb20oYCR7Y2xpZW50X2lkfToke2NsaWVudF9zZWNyZXR9YCkudG9TdHJpbmcoJ2Jhc2U2NCcpXG5jb25zdCBOT1dfUExBWUlOR19FTkRQT0lOVCA9IGBodHRwczovL2FwaS5zcG90aWZ5LmNvbS92MS9tZS9wbGF5ZXIvY3VycmVudGx5LXBsYXlpbmdgXG5jb25zdCBUT0tFTl9FTkRQT0lOVCA9IGBodHRwczovL2FjY291bnRzLnNwb3RpZnkuY29tL2FwaS90b2tlbmBcblxuLy8gVGhpcyBmdW5jdGlvbiBnZXRzIHRoZSBhY2Nlc3MgdG9rZW4gc28gdGhhdCB3ZSBjYW4gYWNjZXNzIHRoZSBBUElcbmNvbnN0IGdldEFjY2Vzc1Rva2VuID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFRPS0VOX0VORFBPSU5ULCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgaGVhZGVyczoge1xuICAgICAgQXV0aG9yaXphdGlvbjogYEJhc2ljICR7YmFzaWN9YCxcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyxcbiAgICB9LFxuICAgIGJvZHk6IHF1ZXJ5c3RyaW5nLnN0cmluZ2lmeSh7XG4gICAgICBncmFudF90eXBlOiAncmVmcmVzaF90b2tlbicsXG4gICAgICByZWZyZXNoX3Rva2VuLFxuICAgIH0pLFxuICB9KVxuXG4gIHJldHVybiByZXNwb25zZS5qc29uKClcbn1cblxuLy8gV2UgdXNlIHRoZSBhZmZvcm1lbnRpb25lZCBhY2Nlc3MgdG9rZW4gYW5kIHNlbmQgaXQgd2l0aCB0aGUgcmVxdWVzdCB0byB0aGUgQVBJXG4vLyB0aGlzIHJlcXVlc3RzIGdldHMgdGhlIGN1cnJlbnRseSBwbGF5aW5nIHNvbmcuXG5leHBvcnQgY29uc3QgZ2V0Tm93UGxheWluZyA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgeyBhY2Nlc3NfdG9rZW4gfSA9IGF3YWl0IGdldEFjY2Vzc1Rva2VuKClcblxuICByZXR1cm4gZmV0Y2goTk9XX1BMQVlJTkdfRU5EUE9JTlQsIHtcbiAgICBoZWFkZXJzOiB7XG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzX3Rva2VufWAsXG4gICAgfSxcbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJmZXRjaCIsInF1ZXJ5c3RyaW5nIiwiY2xpZW50X2lkIiwicHJvY2VzcyIsImVudiIsIlNQT1RJRllfQ0xJRU5UX0lEIiwiY2xpZW50X3NlY3JldCIsIlNQT1RJRllfQ0xJRU5UX1NFQ1JFVCIsInJlZnJlc2hfdG9rZW4iLCJTUE9USUZZX1JFRlJFU0hfVE9LRU4iLCJiYXNpYyIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsIk5PV19QTEFZSU5HX0VORFBPSU5UIiwiVE9LRU5fRU5EUE9JTlQiLCJnZXRBY2Nlc3NUb2tlbiIsInJlc3BvbnNlIiwibWV0aG9kIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJib2R5Iiwic3RyaW5naWZ5IiwiZ3JhbnRfdHlwZSIsImpzb24iLCJnZXROb3dQbGF5aW5nIiwiYWNjZXNzX3Rva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/spotify.js\n");

/***/ }),

/***/ "./pages/api/now-playing.js":
/*!**********************************!*\
  !*** ./pages/api/now-playing.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_spotify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/spotify */ \"./lib/spotify.js\");\n\nasync function handler(_, res) {\n    const response = await (0,_lib_spotify__WEBPACK_IMPORTED_MODULE_0__.getNowPlaying)();\n    // Here we handle the request from the API\n    if (response.status === 204 || response.status > 400) {\n        return res.status(200).json({\n            isPlaying: false\n        });\n    }\n    const song = await response.json();\n    if (song.item === null) {\n        return res.status(200).json({\n            isPlaying: false\n        });\n    }\n    const isPlaying = song.is_playing;\n    const title = song.item.name;\n    const artist = song.item.artists.map((_artist)=>_artist.name\n    ).join(', ');\n    const album = song.item.album.name;\n    const albumImageUrl = song.item.album.images[0].url;\n    const songUrl = song.item.external_urls.spotify;\n    res.setHeader('Cache-Control', 'public, s-maxage=60, stale-while-revalidate=30');\n    // We return an obejct containing the information about the currently playing song\n    return res.status(200).json({\n        album,\n        albumImageUrl,\n        artist,\n        isPlaying,\n        songUrl,\n        title\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hcGkvbm93LXBsYXlpbmcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkM7QUFFOUIsZUFBZUMsT0FBTyxDQUFDQyxDQUFDLEVBQUVDLEdBQUcsRUFBRSxDQUFDO0lBQzdDLEtBQUssQ0FBQ0MsUUFBUSxHQUFHLEtBQUssQ0FBQ0osMkRBQWE7SUFFcEMsRUFBMEM7SUFDMUMsRUFBRSxFQUFFSSxRQUFRLENBQUNDLE1BQU0sS0FBSyxHQUFHLElBQUlELFFBQVEsQ0FBQ0MsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ3JELE1BQU0sQ0FBQ0YsR0FBRyxDQUFDRSxNQUFNLENBQUMsR0FBRyxFQUFFQyxJQUFJLENBQUMsQ0FBQztZQUFDQyxTQUFTLEVBQUUsS0FBSztRQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVELEtBQUssQ0FBQ0MsSUFBSSxHQUFHLEtBQUssQ0FBQ0osUUFBUSxDQUFDRSxJQUFJO0lBRWhDLEVBQUUsRUFBRUUsSUFBSSxDQUFDQyxJQUFJLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDdkIsTUFBTSxDQUFDTixHQUFHLENBQUNFLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO1lBQUNDLFNBQVMsRUFBRSxLQUFLO1FBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQsS0FBSyxDQUFDQSxTQUFTLEdBQUdDLElBQUksQ0FBQ0UsVUFBVTtJQUNqQyxLQUFLLENBQUNDLEtBQUssR0FBR0gsSUFBSSxDQUFDQyxJQUFJLENBQUNHLElBQUk7SUFDNUIsS0FBSyxDQUFDQyxNQUFNLEdBQUdMLElBQUksQ0FBQ0MsSUFBSSxDQUFDSyxPQUFPLENBQUNDLEdBQUcsRUFBRUMsT0FBTyxHQUFLQSxPQUFPLENBQUNKLElBQUk7TUFBRUssSUFBSSxDQUFDLENBQUk7SUFDekUsS0FBSyxDQUFDQyxLQUFLLEdBQUdWLElBQUksQ0FBQ0MsSUFBSSxDQUFDUyxLQUFLLENBQUNOLElBQUk7SUFDbEMsS0FBSyxDQUFDTyxhQUFhLEdBQUdYLElBQUksQ0FBQ0MsSUFBSSxDQUFDUyxLQUFLLENBQUNFLE1BQU0sQ0FBQyxDQUFDLEVBQUVDLEdBQUc7SUFDbkQsS0FBSyxDQUFDQyxPQUFPLEdBQUdkLElBQUksQ0FBQ0MsSUFBSSxDQUFDYyxhQUFhLENBQUNDLE9BQU87SUFFL0NyQixHQUFHLENBQUNzQixTQUFTLENBQUMsQ0FBZSxnQkFBRSxDQUFnRDtJQUUvRSxFQUFrRjtJQUNsRixNQUFNLENBQUN0QixHQUFHLENBQUNFLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO1FBQzNCWSxLQUFLO1FBQ0xDLGFBQWE7UUFDYk4sTUFBTTtRQUNOTixTQUFTO1FBQ1RlLE9BQU87UUFDUFgsS0FBSztJQUNQLENBQUM7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmQtbmV4dGpzLXN0YXJ0ZXItYmxvZy8uL3BhZ2VzL2FwaS9ub3ctcGxheWluZy5qcz81YWVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE5vd1BsYXlpbmcgfSBmcm9tICdAL2xpYi9zcG90aWZ5J1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKF8sIHJlcykge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGdldE5vd1BsYXlpbmcoKVxuXG4gIC8vIEhlcmUgd2UgaGFuZGxlIHRoZSByZXF1ZXN0IGZyb20gdGhlIEFQSVxuICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDQgfHwgcmVzcG9uc2Uuc3RhdHVzID4gNDAwKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgaXNQbGF5aW5nOiBmYWxzZSB9KVxuICB9XG5cbiAgY29uc3Qgc29uZyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuXG4gIGlmIChzb25nLml0ZW0gPT09IG51bGwpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBpc1BsYXlpbmc6IGZhbHNlIH0pXG4gIH1cblxuICBjb25zdCBpc1BsYXlpbmcgPSBzb25nLmlzX3BsYXlpbmdcbiAgY29uc3QgdGl0bGUgPSBzb25nLml0ZW0ubmFtZVxuICBjb25zdCBhcnRpc3QgPSBzb25nLml0ZW0uYXJ0aXN0cy5tYXAoKF9hcnRpc3QpID0+IF9hcnRpc3QubmFtZSkuam9pbignLCAnKVxuICBjb25zdCBhbGJ1bSA9IHNvbmcuaXRlbS5hbGJ1bS5uYW1lXG4gIGNvbnN0IGFsYnVtSW1hZ2VVcmwgPSBzb25nLml0ZW0uYWxidW0uaW1hZ2VzWzBdLnVybFxuICBjb25zdCBzb25nVXJsID0gc29uZy5pdGVtLmV4dGVybmFsX3VybHMuc3BvdGlmeVxuXG4gIHJlcy5zZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnLCAncHVibGljLCBzLW1heGFnZT02MCwgc3RhbGUtd2hpbGUtcmV2YWxpZGF0ZT0zMCcpXG5cbiAgLy8gV2UgcmV0dXJuIGFuIG9iZWpjdCBjb250YWluaW5nIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudGx5IHBsYXlpbmcgc29uZ1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgIGFsYnVtLFxuICAgIGFsYnVtSW1hZ2VVcmwsXG4gICAgYXJ0aXN0LFxuICAgIGlzUGxheWluZyxcbiAgICBzb25nVXJsLFxuICAgIHRpdGxlLFxuICB9KVxufVxuIl0sIm5hbWVzIjpbImdldE5vd1BsYXlpbmciLCJoYW5kbGVyIiwiXyIsInJlcyIsInJlc3BvbnNlIiwic3RhdHVzIiwianNvbiIsImlzUGxheWluZyIsInNvbmciLCJpdGVtIiwiaXNfcGxheWluZyIsInRpdGxlIiwibmFtZSIsImFydGlzdCIsImFydGlzdHMiLCJtYXAiLCJfYXJ0aXN0Iiwiam9pbiIsImFsYnVtIiwiYWxidW1JbWFnZVVybCIsImltYWdlcyIsInVybCIsInNvbmdVcmwiLCJleHRlcm5hbF91cmxzIiwic3BvdGlmeSIsInNldEhlYWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/api/now-playing.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/now-playing.js"));
module.exports = __webpack_exports__;

})();